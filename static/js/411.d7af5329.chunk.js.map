{"version":3,"file":"static/js/411.d7af5329.chunk.js","mappings":"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","sources":["components/App.styled.jsx","components/ContactForm/ContactForm.styled.jsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/filter/selectors.js","redux/contacts/selectors.js","components/Filter/Filter.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactsList.styled.jsx","components/ContactList/ContactList.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 500px;\n  margin: 0px auto;\n  align-items: center;\n`;\n\nexport const Label = styled.label`\n  width: 400px;\n  justify-content: space-between;\n  align-items: center;\n  display: flex;\n  padding: 10px 12px;\n`;\nexport const InputStyle = styled.input`\n  height: 25px;\n  padding: 4px;\n  width: 200px;\n  border: 2px solid rgba(33, 33, 33, 0.2);\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 15px;\n\n  &:hover,\n  &:focus {\n    border-color: #008000;\n    outline: none;\n  }\n`;\n\nexport const ButtonStyle = styled.button`\n  height: 30px;\n  width: 100px;\n  padding: 4px;\n  font-weight: 500px;\n  border: none;\n  border-radius: 5px;\n  background-color: #fff;\n  margin:0 auto;\n  \n  &:hover {\n    background-color: #008000;\n    color: #fff;\n  }\n`;\nexport const TitleStyle = styled.h3`\n  color: #fff; \n  font-size: 14px; \n`","import styled from 'styled-components';\n\nexport const Forms = styled.form`\ndisplay: flex;\nwidth: 80%;\npadding: 10px;\ngap: 20px;\nflex-wrap: wrap;\nborder-radius: 5px;\nbackground-color: rgba(255, 255, 255, 0.7);\n`;\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","export const selectFilter = state => state.filter;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { selectFilter } from 'redux/filter/selectors';\n\nexport const selectLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n\n// const visibleContacts = contacts.filter(\n//     ({ name, number }) =>\n//       name.toLowerCase().includes(lowerFilter) || number.includes(lowerFilter)\n//   );\n","import { Label, InputStyle, TitleStyle } from 'components/App.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterSet } from 'redux/filter/filterSlice';\nimport { selectFilter } from 'redux/filter/selectors';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filterPhoneBook = useSelector(selectFilter);\n\n  const onChangeFilter = event => {\n    const { value } = event.currentTarget;\n    dispatch(filterSet(value));\n  };\n\n  return (\n    <Label>\n     <TitleStyle>Find contacts by name:</TitleStyle> \n      <InputStyle\n        type=\"text\"\n        name=\"filter\"\n        value={filterPhoneBook}\n        title=\"Enter the name\"\n        required\n        onChange={onChangeFilter}\n      />\n    </Label>\n  );\n};\n","\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Forms } from './ContactForm.styled';\nimport {\n  ButtonStyle,\n  Container,\n  InputStyle,\n  Label,\n} from 'components/App.styled';\nimport { addContacts } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { Filter } from 'components/Filter/Filter';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const onSubmitAddContact = event => {\n    event.preventDefault();\n    const newObj = { name, number };\n\n    if (isNameNew(contacts, newObj) !== undefined) {\n      alert(`${newObj.name} is already in contacts`);\n      return;\n    }\n\n    dispatch(addContacts(newObj));\n\n    reset();\n  };\n\n  const isNameNew = (contacts, newObj) => {\n    return contacts.find(\n      ({ name }) => name.toLowerCase() === newObj.name.toLowerCase()\n    );\n  };\n\n  const onChangeInput = event => {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Container>\n      <Forms onSubmit={onSubmitAddContact}>\n        <Label>\n          Name\n          <InputStyle\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            required\n            onChange={onChangeInput}\n          />\n        </Label>\n        <Label>\n          Phone number\n          <InputStyle\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n            required\n            onChange={onChangeInput}\n          />\n        </Label>\n        <ButtonStyle type=\"submit\">Add contact</ButtonStyle>\n      </Forms>{' '}\n      <Filter />\n    </Container>\n  );\n};\n\n","import styled from 'styled-components';\n\nexport const ContactListStyle = styled.ul`\n  background-color: rgba(255, 255, 255, 0.7);\n  padding: 0;\n  width: 422px;\n`;\n\nexport const ContactItemStyle = styled.li`\n  display: flex;\n  font-weight: 400;\n  font-size: 14px;\n  border-radius: 5px;\n  justify-content: space-between;\n  align-items: center;\n  width: 400px;\n  padding: 10px;\n  border: 1px solid #008000;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\n// import { getFilter } from 'redux/filter/filterSlice';\n\nimport { ContactItemStyle, ContactListStyle } from './ContactsList.styled';\nimport { ButtonStyle, Container } from 'components/App.styled';\n\nimport { deleteContacts } from 'redux/contacts/operations';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\n\nexport const ContactsList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n  const dispatch = useDispatch();\n\n  return (\n    <Container>\n      <ContactListStyle>\n        {contacts.map(contact => (\n          <ContactItemStyle key={contact.id}>\n            {contact.name}: {contact.number}\n            <ButtonStyle\n              type=\"botton\"\n              onClick={() => dispatch(deleteContacts(contact.id))}\n            >\n              Delete\n            </ButtonStyle>\n          </ContactItemStyle>\n        ))}\n      </ContactListStyle>\n    </Container>\n  );\n};\n\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactsList } from 'components/ContactList/ContactList';\nimport Loader from 'components/Loader/Loader';\n\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectLoading } from 'redux/contacts/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <title>Your contacts</title>\n      <ContactForm />\n      {isLoading && <Loader />}\n      <ContactsList />\n    </>\n  );\n}\n"],"names":["Container","styled","Label","InputStyle","ButtonStyle","TitleStyle","Forms","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectFilter","state","filter","selectLoading","contacts","isLoading","selectContacts","items","selectVisibleContacts","contact","toLowerCase","includes","Filter","dispatch","useDispatch","filterPhoneBook","useSelector","type","title","required","onChange","event","currentTarget","filterSet","ContactForm","useState","setName","number","setNumber","isNameNew","newObj","onChangeInput","reset","onSubmit","preventDefault","addContacts","alert","pattern","ContactListStyle","ContactItemStyle","ContactsList","onClick","deleteContacts","id","Contacts","useEffect","fetchContacts","Loader"],"sourceRoot":""}